{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/personService.js","components/Notification.js","App.js","index.js"],"names":["Filter","changeHandler","filter","onChange","value","PersonForm","submitHandler","nameChangeHandler","numberChangeHandler","nameValue","numberValue","onSubmit","type","Person","person","deleteHandler","name","number","id","onClick","Persons","personList","map","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","console","log","className","text","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","nameFilter","setNameFilter","statusMessage","setStatusMessage","useEffect","personService","initialPersons","updateNumber","newPerson","returnedNumber","catch","error","setTimeout","newPersonArray","personsToShow","toUpperCase","includes","event","target","preventDefault","some","window","confirm","find","returnedPerson","concat","toDelete","parseInt","deletedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23fdfba6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({ changeHandler, filter }) => {\r\n\r\n  return (\r\n    <div>\r\n      Filter shown with: <input onChange={changeHandler} value={filter} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react';\r\n\r\nconst PersonForm = ({ submitHandler, nameChangeHandler, numberChangeHandler, nameValue, numberValue }) => {\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div>\r\n        Name:  <input onChange={nameChangeHandler} value={nameValue} />\r\n      </div>\r\n      <div>\r\n        Number:  <input onChange={numberChangeHandler} value={numberValue} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">Add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person = ({ person, deleteHandler }) => {\r\n  return (\r\n    <li>{person.name} {person.number} <button value={person.id} onClick={deleteHandler}>Delete</button> </li>\r\n  )\r\n}\r\n\r\nexport default Person","import React from 'react';\r\nimport Person from './Person';\r\n\r\nconst Persons = ({ personList, deleteHandler }) => {\r\n  return (\r\n    <ul>\r\n      {personList.map(person => <Person key={person.name} person={person} deleteHandler={deleteHandler} />)}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\n\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n  getAll, create, update, remove\r\n}","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  console.log(message)\r\n  if (message === null) {\r\n    return (\r\n      null\r\n    )\r\n  }\r\n  else {\r\n    console.log(message)\r\n    if (message.type === 'success') {\r\n      return (\r\n        <div className=\"success\">\r\n          {message.text}\r\n        </div>\r\n      )\r\n    }\r\n    else if (message.type === 'error') {\r\n      return (\r\n        <div className=\"error\">\r\n          {message.text}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default Notification","import React, { useEffect, useState } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components//Persons'\r\nimport personService from './services/personService'\r\nimport Notification from './components/Notification'\r\n\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('Enter Name Here...')\r\n  const [newNumber, setNewNumber] = useState('Enter Number Here...')\r\n  const [nameFilter, setNameFilter] = useState('')\r\n  const [statusMessage, setStatusMessage] = useState(null)\r\n\r\n  const getPersons = () => {\r\n    personService.getAll()\r\n      .then(initialPersons => { setPersons(initialPersons) })\r\n  }\r\n\r\n  useEffect(getPersons, [])\r\n\r\n  const addName = (event) => {\r\n    event.preventDefault()\r\n    const newPerson = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n    if (!persons.some(person => person.name === newPerson.name)) {\r\n      personService.create(newPerson).then(returnedPerson => {\r\n        setStatusMessage({\r\n          type: 'success',\r\n          text: `Added ${newPerson.name}`\r\n        })\r\n        setTimeout(() => {\r\n          setStatusMessage(null)\r\n        }, 5000)\r\n        setPersons(persons.concat(returnedPerson))\r\n      })\r\n      setNewName('')\r\n      setNewNumber('')\r\n    }\r\n    else {\r\n      if (window.confirm(`${newPerson.name} is already added to phonebook, replace old number with new one?`)) {\r\n        updateNumber(persons.find(person => person.name === newPerson.name), newPerson)\r\n      }\r\n    }\r\n  }\r\n\r\n  const updateNumber = (person, newPerson) => {\r\n    const id = person.id\r\n    console.log(newPerson)\r\n    console.log('Updating ', person.name, \" with new number: \", newPerson)\r\n    personService.update(id, newPerson).then(returnedNumber => {\r\n      setPersons(persons.map(person => person.id !== id ? person : returnedNumber))\r\n    })\r\n      .catch(error => {\r\n        setStatusMessage({ type: 'error', text: `Information of ${newPerson.name} has already been removed from server` })\r\n        setTimeout(() => {\r\n          setStatusMessage(null)\r\n        }, 5000)\r\n        const newPersonArray = persons.filter(person => person.id !== id)\r\n        setPersons(newPersonArray)\r\n      })\r\n  }\r\n\r\n  const handleNameValueChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n  const handleNumberValueChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n  const handleNameFilterChange = (event) => {\r\n    setNameFilter(event.target.value)\r\n  }\r\n\r\n  const handleDeleteName = (event) => {\r\n    console.log(event.target.value)\r\n    const toDelete = persons.find(person => person.id === parseInt(event.target.value))\r\n    if (window.confirm(`Delete ${toDelete.name}?`)) {\r\n      console.log(\"Deleting: \", event.target.value)\r\n      personService.remove(event.target.value).then(deletedPerson => {\r\n        const newPersonArray = persons.filter(person => person.id !== parseInt(event.target.value))\r\n        setPersons(newPersonArray)\r\n      }).catch(error => {\r\n        setStatusMessage({ type: 'error', text: `Information of ${toDelete.name} has already been removed from server` })\r\n        setTimeout(() => {\r\n          setStatusMessage(null)\r\n        }, 5000)\r\n        const newPersonArray = persons.filter(person => person.id !== parseInt(event.target.value))\r\n        setPersons(newPersonArray)\r\n      })\r\n    }\r\n  }\r\n\r\n  const personsToShow = setNameFilter === '' ? persons : persons.filter(person => person.name.toUpperCase().includes(nameFilter.toUpperCase()))\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      <h2>Phonebook</h2>\r\n      <Notification message={statusMessage} />\r\n      <Filter changeHandler={handleNameFilterChange} filter={nameFilter} />\r\n\r\n      <h3>Add New</h3>\r\n\r\n      <PersonForm\r\n        submitHandler={addName}\r\n        nameChangeHandler={handleNameValueChange}\r\n        numberChangeHandler={handleNumberValueChange}\r\n        nameValue={newName}\r\n        numberValue={newNumber}\r\n      />\r\n\r\n      <h2>Numbers</h2>\r\n\r\n      <Persons personList={personsToShow} deleteHandler={handleDeleteName} />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default App","import ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <App />, \r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}